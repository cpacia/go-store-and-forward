// Code generated by protoc-gen-go. DO NOT EDIT.
// source: snf.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Message_Status int32

const (
	Message_NA                    Message_Status = 0
	Message_SUCCESS               Message_Status = 100
	Message_ALREADY_AUTHENTICATED Message_Status = 210
	Message_PUBKEY_INVALID        Message_Status = 250
	Message_SIGNATURE_INVALID     Message_Status = 251
	Message_PEERID_INVALID        Message_Status = 252
	Message_NOT_REGISTERED        Message_Status = 305
	Message_MALFORMED_MESSAGE     Message_Status = 400
	Message_UNAUTHORIZED          Message_Status = 401
)

var Message_Status_name = map[int32]string{
	0:   "NA",
	100: "SUCCESS",
	210: "ALREADY_AUTHENTICATED",
	250: "PUBKEY_INVALID",
	251: "SIGNATURE_INVALID",
	252: "PEERID_INVALID",
	305: "NOT_REGISTERED",
	400: "MALFORMED_MESSAGE",
	401: "UNAUTHORIZED",
}

var Message_Status_value = map[string]int32{
	"NA":                    0,
	"SUCCESS":               100,
	"ALREADY_AUTHENTICATED": 210,
	"PUBKEY_INVALID":        250,
	"SIGNATURE_INVALID":     251,
	"PEERID_INVALID":        252,
	"NOT_REGISTERED":        305,
	"MALFORMED_MESSAGE":     400,
	"UNAUTHORIZED":          401,
}

func (x Message_Status) String() string {
	return proto.EnumName(Message_Status_name, int32(x))
}

func (Message_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d86001f6698dbe45, []int{0, 0}
}

type Message_Type int32

const (
	Message_STATUS        Message_Type = 0
	Message_AUTHENTICATE  Message_Type = 1
	Message_CHALLENGE     Message_Type = 2
	Message_RESPONSE      Message_Type = 3
	Message_REGISTER      Message_Type = 5
	Message_UNREGISTER    Message_Type = 6
	Message_STORE_MESSAGE Message_Type = 7
	Message_GET_MESSAGE   Message_Type = 8
	Message_GET_MESSAGES  Message_Type = 9
	Message_MESSAGE       Message_Type = 10
	Message_MESSAGE_ACK   Message_Type = 11
	Message_REPLICATE     Message_Type = 12
)

var Message_Type_name = map[int32]string{
	0:  "STATUS",
	1:  "AUTHENTICATE",
	2:  "CHALLENGE",
	3:  "RESPONSE",
	5:  "REGISTER",
	6:  "UNREGISTER",
	7:  "STORE_MESSAGE",
	8:  "GET_MESSAGE",
	9:  "GET_MESSAGES",
	10: "MESSAGE",
	11: "MESSAGE_ACK",
	12: "REPLICATE",
}

var Message_Type_value = map[string]int32{
	"STATUS":        0,
	"AUTHENTICATE":  1,
	"CHALLENGE":     2,
	"RESPONSE":      3,
	"REGISTER":      5,
	"UNREGISTER":    6,
	"STORE_MESSAGE": 7,
	"GET_MESSAGE":   8,
	"GET_MESSAGES":  9,
	"MESSAGE":       10,
	"MESSAGE_ACK":   11,
	"REPLICATE":     12,
}

func (x Message_Type) String() string {
	return proto.EnumName(Message_Type_name, int32(x))
}

func (Message_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d86001f6698dbe45, []int{0, 1}
}

type Message struct {
	Type Message_Type `protobuf:"varint,1,opt,name=type,proto3,enum=pb.Message_Type" json:"type,omitempty"`
	// Types that are valid to be assigned to Payload:
	//	*Message_Pubkey_
	//	*Message_Registration_
	//	*Message_Challenge_
	//	*Message_Signature_
	//	*Message_EncryptedMessage_
	//	*Message_Ack_
	//	*Message_MessageID_
	Payload              isMessage_Payload `protobuf_oneof:"payload"`
	Code                 Message_Status    `protobuf:"varint,9,opt,name=code,proto3,enum=pb.Message_Status" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_d86001f6698dbe45, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetType() Message_Type {
	if m != nil {
		return m.Type
	}
	return Message_STATUS
}

type isMessage_Payload interface {
	isMessage_Payload()
}

type Message_Pubkey_ struct {
	Pubkey *Message_Pubkey `protobuf:"bytes,2,opt,name=pubkey,proto3,oneof"`
}

type Message_Registration_ struct {
	Registration *Message_Registration `protobuf:"bytes,3,opt,name=registration,proto3,oneof"`
}

type Message_Challenge_ struct {
	Challenge *Message_Challenge `protobuf:"bytes,4,opt,name=challenge,proto3,oneof"`
}

type Message_Signature_ struct {
	Signature *Message_Signature `protobuf:"bytes,5,opt,name=signature,proto3,oneof"`
}

type Message_EncryptedMessage_ struct {
	EncryptedMessage *Message_EncryptedMessage `protobuf:"bytes,6,opt,name=encryptedMessage,proto3,oneof"`
}

type Message_Ack_ struct {
	Ack *Message_Ack `protobuf:"bytes,7,opt,name=ack,proto3,oneof"`
}

type Message_MessageID_ struct {
	MessageID *Message_MessageID `protobuf:"bytes,8,opt,name=messageID,proto3,oneof"`
}

func (*Message_Pubkey_) isMessage_Payload() {}

func (*Message_Registration_) isMessage_Payload() {}

func (*Message_Challenge_) isMessage_Payload() {}

func (*Message_Signature_) isMessage_Payload() {}

func (*Message_EncryptedMessage_) isMessage_Payload() {}

func (*Message_Ack_) isMessage_Payload() {}

func (*Message_MessageID_) isMessage_Payload() {}

func (m *Message) GetPayload() isMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetPubkey() *Message_Pubkey {
	if x, ok := m.GetPayload().(*Message_Pubkey_); ok {
		return x.Pubkey
	}
	return nil
}

func (m *Message) GetRegistration() *Message_Registration {
	if x, ok := m.GetPayload().(*Message_Registration_); ok {
		return x.Registration
	}
	return nil
}

func (m *Message) GetChallenge() *Message_Challenge {
	if x, ok := m.GetPayload().(*Message_Challenge_); ok {
		return x.Challenge
	}
	return nil
}

func (m *Message) GetSignature() *Message_Signature {
	if x, ok := m.GetPayload().(*Message_Signature_); ok {
		return x.Signature
	}
	return nil
}

func (m *Message) GetEncryptedMessage() *Message_EncryptedMessage {
	if x, ok := m.GetPayload().(*Message_EncryptedMessage_); ok {
		return x.EncryptedMessage
	}
	return nil
}

func (m *Message) GetAck() *Message_Ack {
	if x, ok := m.GetPayload().(*Message_Ack_); ok {
		return x.Ack
	}
	return nil
}

func (m *Message) GetMessageID() *Message_MessageID {
	if x, ok := m.GetPayload().(*Message_MessageID_); ok {
		return x.MessageID
	}
	return nil
}

func (m *Message) GetCode() Message_Status {
	if m != nil {
		return m.Code
	}
	return Message_NA
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Message) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Message_Pubkey_)(nil),
		(*Message_Registration_)(nil),
		(*Message_Challenge_)(nil),
		(*Message_Signature_)(nil),
		(*Message_EncryptedMessage_)(nil),
		(*Message_Ack_)(nil),
		(*Message_MessageID_)(nil),
	}
}

type Message_Pubkey struct {
	Pubkey               []byte   `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message_Pubkey) Reset()         { *m = Message_Pubkey{} }
func (m *Message_Pubkey) String() string { return proto.CompactTextString(m) }
func (*Message_Pubkey) ProtoMessage()    {}
func (*Message_Pubkey) Descriptor() ([]byte, []int) {
	return fileDescriptor_d86001f6698dbe45, []int{0, 0}
}

func (m *Message_Pubkey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message_Pubkey.Unmarshal(m, b)
}
func (m *Message_Pubkey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message_Pubkey.Marshal(b, m, deterministic)
}
func (m *Message_Pubkey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message_Pubkey.Merge(m, src)
}
func (m *Message_Pubkey) XXX_Size() int {
	return xxx_messageInfo_Message_Pubkey.Size(m)
}
func (m *Message_Pubkey) XXX_DiscardUnknown() {
	xxx_messageInfo_Message_Pubkey.DiscardUnknown(m)
}

var xxx_messageInfo_Message_Pubkey proto.InternalMessageInfo

func (m *Message_Pubkey) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

type Message_Registration struct {
	Expiry               *timestamp.Timestamp `protobuf:"bytes,1,opt,name=expiry,proto3" json:"expiry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Message_Registration) Reset()         { *m = Message_Registration{} }
func (m *Message_Registration) String() string { return proto.CompactTextString(m) }
func (*Message_Registration) ProtoMessage()    {}
func (*Message_Registration) Descriptor() ([]byte, []int) {
	return fileDescriptor_d86001f6698dbe45, []int{0, 1}
}

func (m *Message_Registration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message_Registration.Unmarshal(m, b)
}
func (m *Message_Registration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message_Registration.Marshal(b, m, deterministic)
}
func (m *Message_Registration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message_Registration.Merge(m, src)
}
func (m *Message_Registration) XXX_Size() int {
	return xxx_messageInfo_Message_Registration.Size(m)
}
func (m *Message_Registration) XXX_DiscardUnknown() {
	xxx_messageInfo_Message_Registration.DiscardUnknown(m)
}

var xxx_messageInfo_Message_Registration proto.InternalMessageInfo

func (m *Message_Registration) GetExpiry() *timestamp.Timestamp {
	if m != nil {
		return m.Expiry
	}
	return nil
}

type Message_Challenge struct {
	Challenge            []byte   `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message_Challenge) Reset()         { *m = Message_Challenge{} }
func (m *Message_Challenge) String() string { return proto.CompactTextString(m) }
func (*Message_Challenge) ProtoMessage()    {}
func (*Message_Challenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_d86001f6698dbe45, []int{0, 2}
}

func (m *Message_Challenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message_Challenge.Unmarshal(m, b)
}
func (m *Message_Challenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message_Challenge.Marshal(b, m, deterministic)
}
func (m *Message_Challenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message_Challenge.Merge(m, src)
}
func (m *Message_Challenge) XXX_Size() int {
	return xxx_messageInfo_Message_Challenge.Size(m)
}
func (m *Message_Challenge) XXX_DiscardUnknown() {
	xxx_messageInfo_Message_Challenge.DiscardUnknown(m)
}

var xxx_messageInfo_Message_Challenge proto.InternalMessageInfo

func (m *Message_Challenge) GetChallenge() []byte {
	if m != nil {
		return m.Challenge
	}
	return nil
}

type Message_Signature struct {
	Signature            []byte   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message_Signature) Reset()         { *m = Message_Signature{} }
func (m *Message_Signature) String() string { return proto.CompactTextString(m) }
func (*Message_Signature) ProtoMessage()    {}
func (*Message_Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_d86001f6698dbe45, []int{0, 3}
}

func (m *Message_Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message_Signature.Unmarshal(m, b)
}
func (m *Message_Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message_Signature.Marshal(b, m, deterministic)
}
func (m *Message_Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message_Signature.Merge(m, src)
}
func (m *Message_Signature) XXX_Size() int {
	return xxx_messageInfo_Message_Signature.Size(m)
}
func (m *Message_Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Message_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Message_Signature proto.InternalMessageInfo

func (m *Message_Signature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type Message_EncryptedMessage struct {
	PeerID               []byte   `protobuf:"bytes,1,opt,name=peerID,proto3" json:"peerID,omitempty"`
	MessageID            []byte   `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Message              []byte   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	More                 bool     `protobuf:"varint,4,opt,name=more,proto3" json:"more,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message_EncryptedMessage) Reset()         { *m = Message_EncryptedMessage{} }
func (m *Message_EncryptedMessage) String() string { return proto.CompactTextString(m) }
func (*Message_EncryptedMessage) ProtoMessage()    {}
func (*Message_EncryptedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_d86001f6698dbe45, []int{0, 4}
}

func (m *Message_EncryptedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message_EncryptedMessage.Unmarshal(m, b)
}
func (m *Message_EncryptedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message_EncryptedMessage.Marshal(b, m, deterministic)
}
func (m *Message_EncryptedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message_EncryptedMessage.Merge(m, src)
}
func (m *Message_EncryptedMessage) XXX_Size() int {
	return xxx_messageInfo_Message_EncryptedMessage.Size(m)
}
func (m *Message_EncryptedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_Message_EncryptedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_Message_EncryptedMessage proto.InternalMessageInfo

func (m *Message_EncryptedMessage) GetPeerID() []byte {
	if m != nil {
		return m.PeerID
	}
	return nil
}

func (m *Message_EncryptedMessage) GetMessageID() []byte {
	if m != nil {
		return m.MessageID
	}
	return nil
}

func (m *Message_EncryptedMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Message_EncryptedMessage) GetMore() bool {
	if m != nil {
		return m.More
	}
	return false
}

type Message_Ack struct {
	MessageID            []byte   `protobuf:"bytes,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message_Ack) Reset()         { *m = Message_Ack{} }
func (m *Message_Ack) String() string { return proto.CompactTextString(m) }
func (*Message_Ack) ProtoMessage()    {}
func (*Message_Ack) Descriptor() ([]byte, []int) {
	return fileDescriptor_d86001f6698dbe45, []int{0, 5}
}

func (m *Message_Ack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message_Ack.Unmarshal(m, b)
}
func (m *Message_Ack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message_Ack.Marshal(b, m, deterministic)
}
func (m *Message_Ack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message_Ack.Merge(m, src)
}
func (m *Message_Ack) XXX_Size() int {
	return xxx_messageInfo_Message_Ack.Size(m)
}
func (m *Message_Ack) XXX_DiscardUnknown() {
	xxx_messageInfo_Message_Ack.DiscardUnknown(m)
}

var xxx_messageInfo_Message_Ack proto.InternalMessageInfo

func (m *Message_Ack) GetMessageID() []byte {
	if m != nil {
		return m.MessageID
	}
	return nil
}

type Message_MessageID struct {
	MessageID            []byte   `protobuf:"bytes,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	PeerID               []byte   `protobuf:"bytes,2,opt,name=peerID,proto3" json:"peerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message_MessageID) Reset()         { *m = Message_MessageID{} }
func (m *Message_MessageID) String() string { return proto.CompactTextString(m) }
func (*Message_MessageID) ProtoMessage()    {}
func (*Message_MessageID) Descriptor() ([]byte, []int) {
	return fileDescriptor_d86001f6698dbe45, []int{0, 6}
}

func (m *Message_MessageID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message_MessageID.Unmarshal(m, b)
}
func (m *Message_MessageID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message_MessageID.Marshal(b, m, deterministic)
}
func (m *Message_MessageID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message_MessageID.Merge(m, src)
}
func (m *Message_MessageID) XXX_Size() int {
	return xxx_messageInfo_Message_MessageID.Size(m)
}
func (m *Message_MessageID) XXX_DiscardUnknown() {
	xxx_messageInfo_Message_MessageID.DiscardUnknown(m)
}

var xxx_messageInfo_Message_MessageID proto.InternalMessageInfo

func (m *Message_MessageID) GetMessageID() []byte {
	if m != nil {
		return m.MessageID
	}
	return nil
}

func (m *Message_MessageID) GetPeerID() []byte {
	if m != nil {
		return m.PeerID
	}
	return nil
}

func init() {
	proto.RegisterEnum("pb.Message_Status", Message_Status_name, Message_Status_value)
	proto.RegisterEnum("pb.Message_Type", Message_Type_name, Message_Type_value)
	proto.RegisterType((*Message)(nil), "pb.Message")
	proto.RegisterType((*Message_Pubkey)(nil), "pb.Message.Pubkey")
	proto.RegisterType((*Message_Registration)(nil), "pb.Message.Registration")
	proto.RegisterType((*Message_Challenge)(nil), "pb.Message.Challenge")
	proto.RegisterType((*Message_Signature)(nil), "pb.Message.Signature")
	proto.RegisterType((*Message_EncryptedMessage)(nil), "pb.Message.EncryptedMessage")
	proto.RegisterType((*Message_Ack)(nil), "pb.Message.Ack")
	proto.RegisterType((*Message_MessageID)(nil), "pb.Message.MessageID")
}

func init() { proto.RegisterFile("snf.proto", fileDescriptor_d86001f6698dbe45) }

var fileDescriptor_d86001f6698dbe45 = []byte{
	// 701 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0x5d, 0x6f, 0xda, 0x48,
	0x14, 0xc5, 0x40, 0x0c, 0xbe, 0x38, 0xc9, 0x64, 0x56, 0x89, 0x2c, 0x2b, 0xd2, 0x46, 0xc9, 0x6a,
	0x95, 0x95, 0x56, 0x44, 0x62, 0xb5, 0xaf, 0x95, 0x1c, 0x3c, 0x05, 0x37, 0x60, 0xd0, 0x8c, 0xa9,
	0x94, 0xbe, 0x20, 0x03, 0x13, 0x8a, 0xf8, 0xb0, 0x65, 0x4c, 0x55, 0x7e, 0x40, 0xdf, 0xdb, 0x9f,
	0xd2, 0xe7, 0xbe, 0xf5, 0x27, 0xf4, 0xe7, 0xb4, 0x7d, 0xa8, 0x66, 0x8c, 0x8d, 0x93, 0x48, 0x7d,
	0xe3, 0xde, 0x73, 0xce, 0x9d, 0xe3, 0x7b, 0xae, 0x00, 0x6d, 0xbd, 0x7a, 0xa8, 0x87, 0x51, 0x10,
	0x07, 0xb8, 0x18, 0x8e, 0xcc, 0x3f, 0xa7, 0x41, 0x30, 0x5d, 0xf0, 0x1b, 0xd9, 0x19, 0x6d, 0x1e,
	0x6e, 0xe2, 0xd9, 0x92, 0xaf, 0x63, 0x7f, 0x19, 0x26, 0xa4, 0xcb, 0x0f, 0x00, 0x95, 0x2e, 0x5f,
	0xaf, 0xfd, 0x29, 0xc7, 0x7f, 0x41, 0x39, 0xde, 0x86, 0xdc, 0x50, 0x2e, 0x94, 0xeb, 0xa3, 0x06,
	0xaa, 0x87, 0xa3, 0xfa, 0x0e, 0xaa, 0x7b, 0xdb, 0x90, 0x53, 0x89, 0xe2, 0x7f, 0x41, 0x0d, 0x37,
	0xa3, 0x39, 0xdf, 0x1a, 0xc5, 0x0b, 0xe5, 0xba, 0xd6, 0xc0, 0x79, 0x5e, 0x5f, 0x22, 0xed, 0x02,
	0xdd, 0x71, 0xf0, 0x0b, 0xd0, 0x23, 0x3e, 0x9d, 0xad, 0xe3, 0xc8, 0x8f, 0x67, 0xc1, 0xca, 0x28,
	0x49, 0x8d, 0x91, 0xd7, 0xd0, 0x1c, 0xde, 0x2e, 0xd0, 0x47, 0x7c, 0xfc, 0x3f, 0x68, 0xe3, 0xb7,
	0xfe, 0x62, 0xc1, 0x57, 0x53, 0x6e, 0x94, 0xa5, 0xf8, 0x34, 0x2f, 0x6e, 0xa6, 0x60, 0xbb, 0x40,
	0xf7, 0x4c, 0x21, 0x5b, 0xcf, 0xa6, 0x2b, 0x3f, 0xde, 0x44, 0xdc, 0x38, 0x78, 0x2e, 0x63, 0x29,
	0x28, 0x64, 0x19, 0x13, 0xbf, 0x02, 0xc4, 0x57, 0xe3, 0x68, 0x1b, 0xc6, 0x7c, 0xb2, 0xa3, 0x1a,
	0xaa, 0x54, 0x9f, 0xe7, 0xd5, 0xe4, 0x09, 0xa7, 0x5d, 0xa0, 0xcf, 0x74, 0xf8, 0x0a, 0x4a, 0xfe,
	0x78, 0x6e, 0x54, 0xa4, 0xfc, 0x38, 0x2f, 0xb7, 0xc6, 0xf3, 0x76, 0x81, 0x0a, 0x54, 0xf8, 0x5c,
	0x26, 0x5d, 0xc7, 0x36, 0xaa, 0xcf, 0x7d, 0x76, 0x53, 0x50, 0xf8, 0xcc, 0x98, 0xf8, 0x6f, 0x28,
	0x8f, 0x83, 0x09, 0x37, 0x34, 0x99, 0xd4, 0xa3, 0x04, 0x58, 0xec, 0xc7, 0x9b, 0x35, 0x95, 0xb8,
	0x79, 0x01, 0x6a, 0x92, 0x08, 0x3e, 0xcb, 0x52, 0x13, 0xe9, 0xea, 0x69, 0x3e, 0xe6, 0x2d, 0xe8,
	0xf9, 0xfd, 0xe3, 0x06, 0xa8, 0xfc, 0x7d, 0x38, 0x8b, 0x12, 0x5e, 0xad, 0x61, 0xd6, 0x93, 0x0b,
	0xaa, 0xa7, 0x17, 0x54, 0xf7, 0xd2, 0x0b, 0xa2, 0x3b, 0xa6, 0xf9, 0x0f, 0x68, 0x59, 0x0c, 0xf8,
	0x3c, 0x1f, 0x58, 0xf2, 0xd6, 0xbe, 0x21, 0xa8, 0xd9, 0xea, 0x05, 0x75, 0x1f, 0xd2, 0x8e, 0x9a,
	0x35, 0xcc, 0x77, 0x80, 0x9e, 0xee, 0x59, 0x7e, 0x05, 0xe7, 0x91, 0x63, 0x67, 0x5f, 0x21, 0x2b,
	0x31, 0x69, 0xbf, 0xc6, 0x62, 0x32, 0x69, 0xbf, 0x2d, 0x03, 0x2a, 0xbb, 0x42, 0x9e, 0x9f, 0x4e,
	0xd3, 0x12, 0x63, 0x28, 0x2f, 0x83, 0x28, 0x39, 0xac, 0x2a, 0x95, 0xbf, 0xcd, 0x2b, 0x28, 0x59,
	0xe3, 0xf9, 0xe3, 0x91, 0xca, 0x93, 0x91, 0xa6, 0x05, 0x5a, 0x16, 0xcd, 0xef, 0xa9, 0x39, 0xcf,
	0xc5, 0xbc, 0xe7, 0xcb, 0x2f, 0x0a, 0xa8, 0x49, 0x58, 0x58, 0x85, 0xa2, 0x6b, 0xa1, 0x02, 0xae,
	0x41, 0x85, 0x0d, 0x9a, 0x4d, 0xc2, 0x18, 0x9a, 0x60, 0x13, 0x4e, 0xad, 0x0e, 0x25, 0x96, 0x7d,
	0x3f, 0xb4, 0x06, 0x5e, 0x9b, 0xb8, 0x9e, 0xd3, 0xb4, 0x3c, 0x62, 0xa3, 0x6f, 0x0a, 0xfe, 0x03,
	0x8e, 0xfa, 0x83, 0xdb, 0x3b, 0x72, 0x3f, 0x74, 0xdc, 0xd7, 0x56, 0xc7, 0xb1, 0xd1, 0x77, 0x05,
	0x9f, 0xc1, 0x09, 0x73, 0x5a, 0xae, 0xe5, 0x0d, 0x28, 0xc9, 0xfa, 0x3f, 0x12, 0x32, 0x21, 0xd4,
	0xb1, 0xb3, 0xe6, 0x4f, 0xd9, 0x74, 0x7b, 0xde, 0x90, 0x92, 0x96, 0xc3, 0x3c, 0x42, 0x89, 0x8d,
	0x3e, 0x17, 0xc5, 0x84, 0xae, 0xd5, 0x79, 0xd9, 0xa3, 0x5d, 0x62, 0x0f, 0xbb, 0x84, 0x31, 0xab,
	0x45, 0xd0, 0xc7, 0x12, 0x3e, 0x01, 0x7d, 0xe0, 0x0a, 0x13, 0x3d, 0xea, 0xbc, 0x21, 0x36, 0xfa,
	0x54, 0xba, 0xfc, 0xaa, 0x40, 0x59, 0xfc, 0x29, 0x60, 0x00, 0x95, 0x79, 0x96, 0x37, 0x60, 0xa8,
	0x80, 0x11, 0xe8, 0x79, 0xab, 0x48, 0xc1, 0x87, 0xa0, 0x35, 0xdb, 0x56, 0xa7, 0x43, 0xdc, 0x16,
	0x41, 0x45, 0xac, 0x43, 0x95, 0x12, 0xd6, 0xef, 0xb9, 0x8c, 0xa0, 0x52, 0x52, 0x25, 0xef, 0xa3,
	0x03, 0x7c, 0x04, 0x30, 0x70, 0xb3, 0x5a, 0xc5, 0x27, 0x70, 0xc8, 0xbc, 0x1e, 0x25, 0x99, 0x91,
	0x0a, 0x3e, 0x86, 0x5a, 0x8b, 0x78, 0x59, 0xa3, 0x2a, 0x1e, 0xcc, 0x35, 0x18, 0xd2, 0xc4, 0x0a,
	0x53, 0x18, 0x04, 0x7f, 0x57, 0x0c, 0xad, 0xe6, 0x1d, 0xaa, 0x09, 0x3b, 0x94, 0xf4, 0x3b, 0x89,
	0x3b, 0xfd, 0x56, 0x83, 0x4a, 0xe8, 0x6f, 0x17, 0x81, 0x3f, 0x19, 0xa9, 0xf2, 0xbe, 0xff, 0xfb,
	0x15, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x70, 0xf8, 0x1a, 0x40, 0x05, 0x00, 0x00,
}
